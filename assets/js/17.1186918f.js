(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{496:function(v,_,t){v.exports=t.p+"assets/img/WechatIMG15.a890a253.jpg"},543:function(v,_,t){"use strict";t.r(_);var s=t(1),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h2",{attrs:{id:"浏览器的进程模型"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器的进程模型"}},[v._v("#")]),v._v(" 浏览器的进程模型")]),v._v(" "),_("h3",{attrs:{id:"何为进程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#何为进程"}},[v._v("#")]),v._v(" "),_("strong",[v._v("何为进程")])]),v._v(" "),_("p",[v._v("程序运行需要有它专属的内存空间，可以把这块内存空间简单的理解为进程")]),v._v(" "),_("h3",{attrs:{id:"何为线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#何为线程"}},[v._v("#")]),v._v(" "),_("strong",[v._v("何为线程")])]),v._v(" "),_("p",[v._v("有了进程之后，就可以运行程序的代码了")]),v._v(" "),_("p",[v._v("运行代码的“人”称之为“线程”")]),v._v(" "),_("p",[v._v("一个进程至少有一个线程，所以在进程开启后会自动创建一个线程来运行代码，该线程就是主线程")]),v._v(" "),_("h3",{attrs:{id:"浏览器有哪些进程和线程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器有哪些进程和线程"}},[v._v("#")]),v._v(" "),_("strong",[v._v("浏览器有哪些进程和线程")])]),v._v(" "),_("p",[v._v("浏览器是一个多进程多线程的应用程序")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("浏览器进程：主要负责界面显示、用户交互、子进程管理")])]),v._v(" "),_("li",[_("p",[v._v("网络进程：负责加载网络资源。")])]),v._v(" "),_("li",[_("p",[v._v("渲染进程（标签页）：渲染进程启动后会开启一个"),_("strong",[v._v("渲染主线程")]),v._v("，主线程负责执行 HTML、CSS、JS 代码。默认情况下，浏览器会为每个标签页开启一个新的渲染进程，以保证不同的标签页之间不相互影响。")])])]),v._v(" "),_("h2",{attrs:{id:"渲染主线程是如何工作的"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#渲染主线程是如何工作的"}},[v._v("#")]),v._v(" 渲染主线程是如何工作的")]),v._v(" "),_("p",[v._v("渲染主线程是浏览器中最忙的线程，要处理这么多任务，主线程遇到了一个前所未有的难题：如何调度任务？"),_("strong",[v._v("排队")])]),v._v(" "),_("p",[_("img",{attrs:{src:t(496),alt:""}})]),v._v(" "),_("h2",{attrs:{id:"何为异步"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#何为异步"}},[v._v("#")]),v._v(" 何为异步")]),v._v(" "),_("p",[_("strong",[v._v("面试题：如何理解 JS 的异步？")])]),v._v(" "),_("blockquote",[_("p",[v._v("Js 是一门单线程语言，因为它是运行在浏览器的渲染主线程中，且渲染主线程只有一个。渲染主线程承担着诸多的工作，渲染页面、执行 JS、解析 HTML、CSS 都在其中。")]),v._v(" "),_("p",[v._v("如果使用同步的方式，就极有可能导致主线程阻塞，从而导致消息队列中的很多任务无法得到执行。这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。")]),v._v(" "),_("p",[v._v("所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他的线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。")])]),v._v(" "),_("h2",{attrs:{id:"js-为何会阻碍渲染"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#js-为何会阻碍渲染"}},[v._v("#")]),v._v(" JS 为何会阻碍渲染")]),v._v(" "),_("p",[v._v("因为执行 JS 和渲染页面都是渲染主线程的工作")]),v._v(" "),_("h2",{attrs:{id:"任务有优先级吗"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#任务有优先级吗"}},[v._v("#")]),v._v(" 任务有优先级吗")]),v._v(" "),_("p",[v._v("任务没有优先级，在消息队列中先进先出。但是"),_("strong",[v._v("消息队列是有优先级的。")])]),v._v(" "),_("p",[v._v("W3C 最新解释：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("每个任务都有一个任务类型，同一个类型的任务必须在一个队列，不同类型的任务可以分属于不同的队列。在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出任务执行。")])]),v._v(" "),_("li",[_("p",[v._v("浏览器必须准备好一个微队列，微队列中的任务优先所有其他任务执行。")])])]),v._v(" "),_("p",[v._v("在目前 Chrome 的实现中，至少包含了下面的队列：")]),v._v(" "),_("ul",[_("li",[_("p",[v._v("延时队列：用于存放计时器到达后的回调任务，优先级"),_("strong",[v._v("中")])])]),v._v(" "),_("li",[_("p",[v._v("交互队列：用于存放用户操作后产生的事件处理任务，优先级"),_("strong",[v._v("高")])])]),v._v(" "),_("li",[_("p",[v._v("微队列：用于存放需要最快执行的任务，优先级"),_("strong",[v._v("最高")]),v._v("，添加任务到微队列的主要方式是使用 Promise、MutationObserver")])])]),v._v(" "),_("p",[_("strong",[v._v("面试题：阐述一下 JS 的事件循环")])]),v._v(" "),_("blockquote",[_("p",[v._v("事件循环又叫做消息循环，是浏览器渲染主线程的工作方式。")]),v._v(" "),_("p",[v._v("在 chrome 的源码中，它开启一个不会结束的 for 循环，每次循环从消息队列中取出第一个任务执行，而其他线程只需要在合适的时候将任务加入到队列末尾即可。")]),v._v(" "),_("p",[v._v("过去把消息队列简单分为宏队列和微队列，这种说法目前已无法满足复杂的浏览器环境，取而代之的是一种更加灵活多变的处理方式。")]),v._v(" "),_("p",[v._v("根据 W3C 的官方解释，每个任务有不同的类型，同类型的任务必须在同一个队列，不同的任务可以分属于不同的队列。不同的任务队列有不同的优先级，在一次事件循环中，由浏览器自行决定取哪一个队列的任务。但浏览器必须有一个微队列，微队列的任务一定具有最高的优先级，必须优先调度执行。")])]),v._v(" "),_("p",[_("strong",[v._v("面试题：JS 的计时器能做到精确计时吗？为什么")])]),v._v(" "),_("blockquote",[_("p",[v._v("不行")]),v._v(" "),_("p",[v._v("1、计算机硬件没有原子钟，无法做到精确计时")]),v._v(" "),_("p",[v._v("2、操作系统的计时函数本身有少量偏差，由于 JS 的计时器最终调用的是操作系统的函数，也就携带了一些偏差")]),v._v(" "),_("p",[v._v("3、按照 W3C 的标准，浏览器实现计时器时，如果嵌套层数超过 5 层，则会带有 4 毫秒的最少时间，这样在计时时间少于 4 毫秒时又带来了偏差")]),v._v(" "),_("p",[v._v("4、受事件循环影响，计时器的回调函数只能在主线程空闲时运行，因此又带来了偏差")])])])}),[],!1,null,null,null);_.default=r.exports}}]);